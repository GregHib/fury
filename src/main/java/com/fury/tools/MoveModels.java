package com.fury.tools;

import java.io.*;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

/**
 * Created by Greg on 01/07/2016.
 */
public class MoveModels {

    public static void copyFile(File from, File to ) throws IOException {
        Files.copy( from.toPath(), to.toPath() );
    }

    public static void main(String[] args) {
        int[] n = new int[] {230,210,214,217,223,215,235,206,203,60050,249,250,251,247,246,248,253,252,292,292,322,292,326,292,320,292,327,292,324,310,40202,151,167,170,162,163,158,158,176,10218,176,40250,40252,40265,40257,275,275,181,183,183,403,378,387,390,393,399,391,408,382,379,379,456,469,470,471,40419,332,40401,346,348,343,343,353,10706,353,40489,433,40488,428,421,438,40478,429,429,358,360,360,7117,7118,176,40251,27623,40263,40266,27622,27625,27633,27627,27630,27628,27631,27629,27632,27645,27644,27646,27642,27640,27643,27641,27634,27635,27638,27639,27636,27637,27648,27563,27647,25864,27650,27649,24553,24553,24554,24554,24555,24555,24556,24556,24557,24557,353,40487,40475,40484,27653,40481,27651,27652,16458,16453,16460,16457,27664,27660,27662,16454,27663,27661,27658,27659,27670,27666,27665,27668,27669,27667,27673,27675,27672,27674,27671,27676,24559,24559,24560,24560,24561,24561,24562,24562,24563,24563,40240,40235,214,214,217,217,223,223,215,215,235,235,40230,40227,40230,40231,40221,40232,40233,40223,40222,40239,43525,27628,40243,40229,40242,40220,40238,40234,40461,40471,40440,393,40451,391,408,40437,40463,40463,40444,40468,40457,40466,40449,40459,40465,16454,40467,40452,40455,40438,378,40450,40447,393,40453,391,408,40448,40442,40442,40446,16453,40470,40458,27664,40460,40445,40441,40469,40443,40472,27659,403,403,215,44908,44926,44917,44918,44913,44915,44921,44923,44906,44923,44916,44910,44909,44912,44924,44914,44911,44919,44920,44922,44907,44925,44927,44958,44946,44953,44950,44930,44959,44937,44940,44949,44952,44964,44963,44935,44942,44961,44947,44951,44931,44953,44956,44934,44945,44929,44939,44960,44944,44957,44954,44936,44932,44948,44965,44955,44941,44962,44943,45032,45031,45029,45030,46344,46358,46353,46347,46367,46348,46364,46356,46369,46368,46385,46381,46370,46379,46383,46389,46390,46380,46361,46350,46351,46365,46366,46357,46355,46359,46376,46374,46388,46373,46386,46387,46382,46372,46377,46384,46345,46360,46352,46354,46346,46362,46363,46349,46369,46368,46391,46378,46370,46379,46375,46389,46371,46392,46451,176,176,60063,60067,60059,60049,60055,60060,176,60058,176,60056,60065,60051,60062,60048,60057,60070,60068,60052,60066,60064,60061,60053,60069,176,176,176,176,176,176,60194,60185,60170,60186,60189,60178,60184,60174,60179,60187,60167,60169,60190,60181,60191,60182,60196,60175,60188,60192,60183,60195,60177,60171,60197,60193,60166,60172,60173,60180,60168,60176,60032,60042,60041,60036,60040,60034,60044,60046,60045,60033,60037,60047,60035,60039,60038,60043,60129,60135,60131,60132,60134,60133,60127,60125,60128,60130,60334,60126,60124,60123,60109,60122,60105,60108,60113,60117,60110,60119,60116,60112,60121,60106,60107,60115,60120,60111,60114,60118,60250,60256,60255,60241,60261,60272,60269,60258,60264,60259,60262,60267,60263,60254,60268,60249,60245,60244,60271,60251,60270,60266,60246,60252,60260,60257,60247,60248,60243,60265,60253,60242,60229,60221,353,60216,353,60226,353,60225,353,353,60227,353,60222,60217,60218,60228,353,60220,60215,353,60223,60230,353,353,60219,353,353,60231,353,353,353,60224,60201,60213,60209,60214,60211,60207,60199,60203,60206,60210,60202,60200,60205,60212,60208,60204,60198,60298,60296,60299,60301,60302,60297,60300,60303,60335,60291,60288,60290,60278,60280,60294,60275,60283,60289,60277,60293,60286,60292,60282,60274,60273,60281,60276,60279,60285,60284,60287,60295,60000,60009,60016,60012,60025,60003,60006,60007,60028,60021,60008,60005,60030,60010,60011,60014,60004,60023,60027,60022,60031,60026,60019,60015,60002,60001,60018,60013,60024,60017,60029,60020,60096,60076,60095,60103,60104,60100,60101,60094,60099,60090,60078,60088,60098,60093,60085,60084,60333,60089,60082,60080,60079,60075,60091,60097,60077,60102,60087,60092,60074,60081,60086,60083
        };
        String loc = "C:\\Users\\Greg\\Desktop\\RSPS\\Data\\667\\667 Model Dump";

        /*InputStream is = null;
        try {
            is = new FileInputStream("C:\\Users\\Greg\\Desktop\\RSPS\\Service Work\\RuthlessPS\\Ruthless_Client\\itemmodeldump.txt");
            BufferedReader buf = new BufferedReader(new InputStreamReader(is));
            String line = buf.readLine();
            String[] ids = line.split(",");
            n = new int[ids.length];
            for(int i = 0; i < ids.length; i++)
                n[i] = Integer.parseInt(ids[i]);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }*/

        moveModels(loc, n);
    }
    public static void moveModels(String loc, int[] modelIds) {
        boolean showOverMax = false;
        if(showOverMax) {
            Set<Integer> outOfRange = new HashSet<>();
            for(int test : modelIds)
                if(test > 65528)
                    outOfRange.add(test);
            System.out.println(Arrays.toString(outOfRange.toArray()));
        }
        Set<Integer> numbers = new HashSet<>();
        for(int i : modelIds)
            numbers.add(i);//Removes duplicates

        File folder = new File(loc);
        File[] listOfFiles = folder.listFiles();

        String fileType = ".gz";
        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                String name = listOfFiles[i].getName();
                if(name.contains(fileType)) {
                    int id = Integer.parseInt(name.replaceAll(fileType, "").trim());
                    if(numbers.contains(id)) {
                        File from = new File(loc + "\\" + id + fileType);
                        File to = new File(loc + "\\Selected\\" + id + fileType);
                        try {
                            copyFile(from, to);
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        }
        System.out.println("Done.");
    }
}
