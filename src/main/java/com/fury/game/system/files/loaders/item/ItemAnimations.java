package com.fury.game.system.files.loaders.item;

import com.fury.cache.Revision;
import com.fury.core.model.item.Item;

public class ItemAnimations {

    private enum Animations {
        SLING(new int[] {15597, 19830}, 14863, 14864, 14865, 14866, 14867),
        SAGAIE(21364, 3115, 3119, 3116, 3238, 3236),
        BOLAS(21365, 14863, 3002, 3001, 14866, 3128),
        GUTHANS_SPEAR(new int[] {4726, 4910, 4911, 4912, 4913, 4914}, 813, 1205, 1210, 12008, 2080),//Block unknown, could be 2079
        VERACS_FLAIL(new int[] {4755, 4982, 4983, 4984, 4985, 4986}, 2061, 2060, -1, 2063, 2062),
        TORAGS_HAMMERS(new int[] {4747, 4958, 4959, 4960, 4961, 4962}, -1, -1, -1, -1, 2068),
        KARILS_CROSSBOW(new int[] {4734, 4934, 4935, 4936, 4937, 4938}, 2074, 2076, 2077, -1, 2075),
        AHRIMS_STAFF(new int[] {4710, 4862, 4863, 4864, 4865, 4866}, 813, 1205, 1210, -1, 729),
        DHAROKS_GREATAXE(new int[] {4718, 4886, 4887, 4888, 4889, 4890, 15403, 22405}, 12000, 11999, 12001, 2063, 2066),//also 2062, 2067 - old 2064 & balmung
        CHINCHOMPA(new int[]{10033, 10034}, -1, -1, -1, -1, 2779),
        BASKET(4565, 1837, 1836, 1836, -1, -1),
        SLED(4084, 1461, 1468, 1467, 1466, -1),
        SALAMANDER(new int[] {10146, 10147, 10148, 10149}, 5246, 5245, -1, -1, 5247),//Can't run
        BOXING_GLOVES(new int[] {7671, 7673}, 3677, 3680, -1, 3679, 3678),//Can't run
        ABYSSAL_WHIP(new int[] {4151, 4178, 13444, 14661, 15441, 15442, 15443, 15444, 23691}, 11973, 11975, 11976, 11974, 11968),//Old 1658 - 1661
        ABYSSAL_VINE_WHIP(new int[] {21371, 21372, 21373, 21374, 21375}, 11973, 11977, 11976, 11974, 11968),
        BARRELCHEST_ANCHOR(10887, 5869, 5867, 5868, 11974, 5865),//Animations are better on pre_rs3
        GRANITE_MAUL(4153, 1662, 1663, 1664, 1666, 1665),
        TZHAAR_KET_OM(6528, 2065, 1663, 1664, 2063, 13691),
        GOLDEN_HAMMER(20084, 2065, 1663, 1664, 2063, 13691),
        HAND_CANNON(15241, 12155, 12154, -1, 12156, 12153),//12174 for female?
        GODSWORD(new int[] {11694, 11696, 11698, 11700, 11730}, 11982, 11983, 11984, 12022, 11979),//Also saradomin sword. Old: 7047, 7046, 7039, 7050
        ZAMORAKIAN_SPEAR(11716, 12010, 12013, 12016, 12008, 12006),
        DOMINION_CROSSBOW(22348, Revision.PRE_RS3, 4591, 4226, 4228, -1, 4230),
        MAUL(new int[] {4153, 13445, 16174, 16175, 16176, 16177, 16178, 16179, 16180, 16181, 16182, 16183, 16184, 16405, 16407, 16409, 16411, 16413, 16415, 16417, 16419, 16421, 16423, 16425, 16965, 18353, 18354}, 13217, 13218, 13220, 13042, 13691),//Unknown block; Old 2661
        HALBERD(new int[] {3190, 3192, 3194, 3196, 3198, 3200, 3202, 3204, 6599, 13478, 13779}, 813, 1146, 1210, -1, 440),
        TWO_HANDED_SWORD(new int[] {1307, 1309, 1311, 1313, 1315, 1317, 1319, 6609, 7158, 13430, 13778, 16127, 16128, 16129, 16130, 16131, 16132, 16133, 16134, 16135, 16136, 16137, 16889, 16891, 16893, 16895, 16897, 16899, 16901, 16903, 16905, 16907, 16909, 16973, 18369, 18370, 20874, 23696}, 7047, 7046, 7039, 7050, 7041),
        BOW(new int[] {839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 2883, 4212, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4236, 4827, 7534, 8880, 9705, 10280, 10282, 10284, 11235, 13405, 13523, 13524, 13525, 13526, 13527, 13528, 13541, 13542, 13543, 13719, 14121, 14192, 14194, 14196, 14198, 14200, 15701, 15702, 15703, 15704, 15775, 15776, 15777, 15778, 15779, 15780, 15781, 15782, 15783, 15784, 15785, 15836, 15903, 15904, 15905, 15906, 15907, 15908, 15909, 15910, 15911, 15912, 15913, 16317, 16319, 16321, 16323, 16325, 16327, 16329, 16331, 16333, 16335, 16337, 16867, 16869, 16871, 16873, 16875, 16877, 16879, 16881, 16883, 16885, 16887, 16975, 17295, 18331, 18332, 18373, 18374, 19143, 19145, 19146, 19148, 19149, 19151, 20171, 20173, 20174, 20859, 21332, 6724}, -1, -1, -1, -1, 426),
        LONGSWORD_IN(new int[] {1291, 1293, 1295, 1297, 1299, 1301, 1303, 1305, 6607, 6897, 13474, 13475, 13982, 13984, 15596, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16383, 16385, 16387, 16389, 16391, 16393, 16395, 16397, 16399, 16401, 16403, 16961, 16963, 18352, 18367, 18368, 20833, 20857, 20872, 21335, 2402, 6745, 35, 14632, 6746}, 15069, 15073, 15070, 15074, 15071),//+ silverlight x2 + excalibur x2 + darklight old 12311?
        LONGSWORD_OUT(new int[] {18351}, 808, 819, 824, 388, 15071),
        VESTA_LONGSWORD(new int[] {13899, 13901, 13923, 13925}, 808, 819, 824, 388, 12311),
        SCIMITAR(new int[] {1321, 1323, 1325, 1327, 1329, 1331, 1333, 4587, 6611, 13476, 13477, 13979, 13981, 14097, 14287, 14289, 14291, 14293, 14295}, 15069, 15073, 15070, 15074, 15071),
        KORASI_SWORD(new int[] {18786, 19780, 19784}, 8980, 12024, 15070, 15074, 12029),//Old 12021
        KATANA(new int[] {20929, 20937, 23674, 24433, 24434}, 1880, 1910, 1925, 1926, 1884),
        CROSSBOW(new int[] { 767, 837, 4734, 4934, 4935, 4936, 4937, 9174, 9176, 9177, 9179, 9181, 9183, 9185, 10156, 11165, 11167, 13081, 13530, 14684, 18357, 18358, 8880, 24303, 24338}, -1, 4226, 4228, -1, 4230),
        WAND(new int[] { 6908, 6910, 6912, 6914, 10150, 18681, 22985 }, 813, 15073, 1210, 420, 419),
        STAFF_OF_LIGHT(new int[] {15486, 15502, 22207, 22208, 22209, 22210, 22211, 22212, 22213, 22214}, 813, 1146, 1210, 13043, 13040),
        STAFF(new int[] {772, 1379, 1381, 1383, 1385, 1387, 1389, 1391, 1393, 1395, 1397, 1399, 1401, 1403, 1405, 1407, 1409, 2415, 2416, 2417, 3053, 3054, 4170, 4675, 4710, 4862, 4863, 4864, 4865, 6562, 6563, 6603, 9084, 9091, 9092, 9093, 11736, 11738, 13406, 13630, 13631, 13632, 13633, 13634, 13635, 13636, 13637, 13638, 13639, 13640, 13641, 13642, 13867, 13869, 13941, 13943, 14117, 14377, 14379, 14381, 14383, 14385, 15598, 15835, 16153, 16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173, 16967, 16969, 16977, 16979, 16981, 16983, 16985, 16987, 16989, 16991, 16993, 16995, 16997, 16999, 17001, 17003, 17005, 17007, 17009, 17011, 17013, 17015, 17017, 17293, 18341, 18342, 18355, 18356, 18371, 18372, 18667, 19308, 19310, 19323, 19325, 19327, 19329, 19331, 21490, 21491, 21492, 21493, 21494, 21495, 21496, 21497, 21498, 21499, 21500, 21501, 21502, 21503, 21504, 21505, 21506, 21507, 21580, 21777, 22347, 22494, 22496, 22497, 24092, 24093, 24094, 24095, 24096, 24097, 24098, 24099, 24188, 24197, 24198, 24199, 24200, 24201, 24202, 24203, 24328, 25472, 25473, 25474, 25475}, 813, 1146, 1210, 420, 419),
        CROZIER(new int[] {10440, 10442, 10444, 19362, 19364, 19366}, 813, 1146, 1210, 420, 419),
        SPEAR(new int[] {1237, 1239, 1241, 1243, 1245, 1247, 1249, 1251, 1253, 1255, 1257, 1259, 1261, 1263, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 4158, 4580, 4582, 4584, 5016, 5704, 5706, 5708, 5710, 5712, 5714, 5716, 5718, 5720, 5722, 5724, 5726, 5728, 5730, 5734, 5736, 7809, 11716, 13454, 13769, 13770, 13771, 13772, 13773, 13774, 13775, 13776, 13905, 13907, 13929, 13931, 13988, 13990, 16218, 16219, 16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 17063, 17065, 17067, 17069, 17071, 17073, 17075, 17077, 17079, 17081, 17083, 17085, 17087, 17089, 17091, 17093, 17095, 17097, 17099, 17101, 17103, 17105, 17107, 17109, 17111, 17113, 17115, 17117, 17119, 17121, 17123, 17125, 17127, 17129, 17131, 17133, 17135, 17137, 17139, 17141, 17143, 17145, 17147, 17149, 23683}, 813, 1205, 1210, 430, 428),
        CLAW(new int[] {3095, 3096, 3097, 3098, 3099, 3100, 3101, 6587, 13764, 14484, 14486, 23695}, -1, -1, -1, 397, 393),
        DART(new int[] {806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 3093, 3094, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 11230, 11231, 11233, 11234, 25202}, -1, -1, -1, -1, 582),
        KNIFE(new int[] {863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 7447, 13720}, -1, -1, -1, -1, 9055),
        MACE(new int[] {1420, 1422, 1424, 1426, 1428, 1430, 1432, 1434, 6601, 7808, 8841, 11061, 13479, 13780, 13985, 13987, 14679, 14681, 21744, 21746, 21747, 21748, 21749, 22406, 24294}, 813, 1205, 1210, 403, 401),//+ tzhaar-ket-em
        HATCHET(new int[] {492, 494, 496, 498, 500, 502, 504, 506, 1349, 1351, 1353, 1355, 1357, 1359, 1361, 6739, 6741, 7952, 10491, 13469, 13470, 14100, 14108, 14132, 14134, 14136, 14138, 14140, 15298, 15991, 15992, 15993, 15994, 15995, 15996, 15997, 15998, 15999, 16000, 16001, 16361, 16363, 16365, 16367, 16369, 16371, 16373, 16375, 16377, 16379, 16381, 21404}, 813, 1205, 1210, 397, 395),
        WARHAMMER(new int[] {1335, 1337, 1339, 1341, 1343, 1345, 1347, 6613, 13473, 13902, 13904, 13926, 13928, 14307, 14309, 14311, 14313, 14315, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 17019, 17021, 17023, 17025, 17027, 17029, 17031, 17033, 17035, 17037, 17039}, -1, -1, 1210, 397, 395),
        JAVELIN(new int[] {825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 5642, 5643, 5644, 5645, 5646, 5647, 5649, 5650, 5651, 5652, 5653, 13879, 13880, 13881, 13882, 13953, 13954, 13955, 13956}, 813, 1205, -1, -1, 10501),
        THROWAXE(new int[] {800, 801, 802, 803, 804, 805, 13721}, -1, -1, -1, -1, 9055),
        MORRIGANS_THROWING_AXE(new int[] {13883, 13957}, -1, -1, -1, -1, 10504),
        PICKAXE(new int[] {466, 468, 470, 472, 474, 476, 478, 1265, 1267, 1269, 1271, 1273, 1275, 13480, 14099, 14107, 14122, 14124, 14126, 14128, 14130, 15259, 15261, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151, 16152, 16295, 16297, 16299, 16301, 16303, 16305, 16307, 16309, 16311, 16313, 16315, 20780, 20781, 20782, 20783, 20784, 20785, 20786, 21405, 22407, 13661}, -1, -1, -1, -1, 400),
        DAGGER(new int[] {746, 747, 1203, 1205, 1207, 1209, 1211, 1213, 1217, 1219, 1221, 1223, 1225, 1227, 1229, 1233, 1235, 5668, 5670, 5672, 5674, 5676, 5678, 5682, 5684, 5686, 5688, 5690, 5692, 5694, 5696, 5700, 5702, 6591, 6593, 6595, 6597, 8872, 8874, 8876, 8878, 13765, 13766, 13767, 13768, 14297, 14299, 14301, 14303, 14305, 15826, 15827, 15848, 15849, 15850, 15851, 15852, 15853, 15854, 15855, 15856, 15857, 15858, 15859, 15860, 15861, 15862, 15863, 15864, 15865, 15866, 15867, 15868, 15869, 15870, 15871, 15872, 15873, 15874, 15875, 15876, 15877, 15878, 15879, 15880, 15881, 15882, 15883, 15884, 15885, 15886, 15887, 15888, 15889, 15890, 15891, 16757, 16759, 16761, 16763, 16765, 16767, 16769, 16771, 16773, 16775, 16777, 16779, 16781, 16783, 16785, 16787, 16789, 16791, 16793, 16795, 16797, 16799, 16801, 16803, 16805, 16807, 16809, 16811, 16813, 16815, 16817, 16819, 16821, 16823, 16825, 16827, 16829, 16831, 16833, 16835, 16837, 16839, 16841, 16843, 17275, 17277, 24186}, -1, -1, -1, 403, 13049),
        DRAGON_DAGGER(new int[] {1215, 1231, 5680, 5698, 13465, 13466, 13467, 13468, 13976, 13978}, -1, -1, -1, 403, 376),
        RAPIER(new int[] {7142, 16035, 16036, 16037, 16038, 16039, 16040, 16041, 16042, 16043, 16044, 16045, 16935, 16937, 16939, 16941, 16943, 16945, 16947, 16949, 16951, 16953, 16955, 16957, 16959, 18349, 18350, 18365, 18366, 20671}, 813, 1205, 824, -1, 13048),
        SWORD(new int[] {667, 1277, 1279, 1281, 1283, 1285, 1287, 1289, 4068, 4503, 4508, 6605, 6818, 7675, 7806, 9703, 10858, 13290, 13777, 15596, 18705, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20540, 20541, 20542, 20543, 20544, 20545, 20546, 20547, 20548, 20549, 20550, 20551, 20552, 20553, 20554, 20555, 20556, 20557, 20821, 22346, 24187, 6523}, 813, 1205, -1, -1, 13048),//+ toktz-xil-ak
        DEFENDER(new int[] { 8845, 8846, 8847, 8848, 8849, 8850, 15825, 17273, 20072 }, -1, -1, -1, 4177, -1),
        BOOK(new int[] {3839, 3840, 3841, 3842, 3843, 3844, 6889, 19612, 19613, 19614, 19615, 19616, 19617, 22420, 22421, 22422, 22423, 22424, 22425, 23027, 23664, 24100, 24101, 24102, 24103, 24104, 24105, 24106, 24107 }, -1, -1, -1, 420, -1),
        SHIELD(new int[] {1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1193, 1195, 1197, 1199, 1201, 1540, 2589, 2597, 2603, 2611, 2621, 2629, 2659, 2667, 2675, 2890, 3122, 3488, 3758, 4072, 4156, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4507, 4512, 6215, 6217, 6219, 6221, 6223, 6225, 6227, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6243, 6245, 6247, 6249, 6251, 6253, 6255, 6257, 6259, 6261, 6263, 6265, 6267, 6269, 6271, 6273, 6275, 6277, 6279, 6631, 6633, 6894, 7332, 7334, 7336, 7338, 7340, 7342, 7344, 7346, 7348, 7350, 7352, 7354, 7356, 7358, 7360, 7676, 8714, 8716, 8718, 8720, 8722, 8724, 8726, 8728, 8730, 8732, 8734, 8736, 8738, 8740, 8742, 8744, 8746, 8748, 8750, 8752, 8754, 8756, 8758, 8760, 8762, 8764, 8766, 8768, 8770, 8772, 8774, 8776, 8856, 9704, 9731, 10352, 10665, 10666, 10667, 10668, 10669, 10670, 10671, 10672, 10673, 10674, 10675, 10676, 10677, 10678, 10679, 10826, 11283, 11284, 12908, 12909, 12910, 12911, 12912, 12913, 12915, 12916, 12917, 12918, 12919, 12920, 12922, 12923, 12924, 12925, 12926, 12927, 12929, 12930, 12931, 12932, 12933, 12934, 13506, 13507, 13555, 13734, 13736, 13738, 13740, 13742, 13744, 13787, 13788, 13804, 13809, 13824, 13829, 13834, 13839, 13964, 13966, 14577, 14578, 14579, 15808, 15809, 15810, 15811, 15812, 15813, 15814, 15815, 15816, 15817, 15818, 16079, 16933, 16971, 17341, 17343, 17345, 17347, 17349, 17351, 17353, 17355, 17357, 17359, 17361, 18359, 18360, 18361, 18362, 18363, 18364, 18691, 18709, 18747, 19340, 19345, 19410, 19412, 19425, 19427, 19440, 19442, 19749, 20436, 20438, 20873, 21334, 21527, 21528, 21529, 21530, 23697, 23698, 23699, 23700, 24365, 24367, 25019, 25021, 25120, 25320, 25321, 25350, 25353, 6524, 25013, 25015, 19712, 15831, 15832, 17285, 17287, 25001, 25003}, -1, -1, -1, 1156, -1)//+ toketz-ket-xil + armadyl buckler x2 + void deflector + wards, 13042 same anim
        ;

        private int[] ids;
        private int stand, walk, run, block, attack;
        private Revision revision;

        Animations(int id, int stand, int walk, int run, int block, int attack) {
            this(new int[] {id}, Revision.RS2, stand, walk, run, block, attack);
        }

        Animations(int id, Revision revision, int stand, int walk, int run, int block, int attack) {
            this(new int[] {id}, revision, stand, walk, run, block, attack);
        }

        Animations(int[] ids, int stand, int walk, int run, int block, int attack) {
            this(ids, Revision.RS2, stand, walk, run, block, attack);
        }

        Animations(int[] ids, Revision revision, int stand, int walk, int run, int block, int attack) {
            this.ids = ids;
            this.revision = revision;
            this.stand = stand;
            this.walk = walk;
            this.run = run;
            this.block = block;
            this.attack = attack;
        }
    }

    private static int getExtendedAttackAnimation(Animations anim, int style) {
        if(anim == null)
            return style == 2 ? 423 : 422;

        switch (anim) {
            case DHAROKS_GREATAXE:
                return style == 2 ? 2067 : anim.attack;// 12003/12002
            case ABYSSAL_WHIP:
            case ABYSSAL_VINE_WHIP:
                return style == 1 ? 11969 : style == 2 ? 11970 : anim.attack;
            case GODSWORD:
                return style == 2 ? 11980 : style == 3 ? 11981 : anim.attack;// 7048/7049
            case ZAMORAKIAN_SPEAR:
                return style == 1 ? anim.attack : style == 2 ? 12009 : 12005;
            case HALBERD:
                return style == 0 ? 428 : anim.attack;
            case TWO_HANDED_SWORD:
                return style == 2 ? 7048 : style == 3 ? 7049 : anim.attack;
            case LONGSWORD_IN:
            case LONGSWORD_OUT:
            case VESTA_LONGSWORD:
                return style == 2 ? 12310 : anim.attack;
            case SCIMITAR:
                return style == 2 ? 15072 : anim.attack;
            case KORASI_SWORD:
                return style == 0 ? 12028 : anim.attack;
            case KATANA:
                return style == 1 ? 15072 : style == 2 ? 1882 : anim.attack;
            case STAFF_OF_LIGHT:
                return style == 1 ? 15071 : style == 2 ? 15072 : anim.attack;//13039 & 13044 same anims
            case SPEAR:
                return style == 1 ? 440 : style == 2 ? 429 : anim.attack;
            case CLAW:
                return style == 2 ? 1067 : anim.attack;
            case DART:
                return style == 3 ? 6600 : anim.attack;
            case MACE:
                return style == 2 ? 400 : anim.attack;
            case HATCHET:
            case WARHAMMER:
            case PICKAXE:
                return style == 1 || style == 2 ? 401 : anim.attack;
            case DRAGON_DAGGER:
                return style == 2 ? 377 : 376;
            case DAGGER:
                return style == 1 || style == 2 ? 395 : anim.attack;
            case RAPIER:
                return style == 0 || style == 1 ? 13049 : anim.attack;
            case SWORD:
                return style == 0 ? 13049 : anim.attack;
            case BOXING_GLOVES:
                return style == 1 ? 2555 : anim.attack;
            default:
                return anim.attack;

        }
    }

    private static Animations getAnimations(Item item) {
        for(Animations anims : Animations.values()) {
            for(int id : anims.ids) {
                if(item.getId() == id) {
                    return anims;
                }
            }
        }
        return null;
    }

    public static int getStandAnimation(Item item) {
        Animations anim = getAnimations(item);

        return anim == null || anim.stand == -1 ? 808 : anim.stand;
    }

    public static int getWalkAnimation(Item item) {
        Animations anim = getAnimations(item);

        return anim == null || anim.walk == -1 ? 819 : anim.walk;
    }

    public static int getRunAnimation(Item item) {
        Animations anim = getAnimations(item);

        return anim == null || anim.run == -1 ? 824 : anim.run;
    }

    public static int getBlockAnimation(Item item) {
        Animations anim = getAnimations(item);

        return anim == null || anim.block == -1 ? 424 : anim.block;
    }

    public static int getAttackAnimation(Item item, int style) {
        Animations anim = getAnimations(item);

        return getExtendedAttackAnimation(anim, style);
    }
}
